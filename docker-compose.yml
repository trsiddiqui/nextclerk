version: "3.7"

services:
  # proxy:
  #   image: nginx:alpine
  #   container_name: proxy
  #   ports:
  #     - '80:80'
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   restart: 'unless-stopped'
  #   networks:
  #     - backend
  # server:
  #   build:
  #     context: ./
  #     target: production-build-stage
  #     dockerfile: ./Dockerfile
  #   container_name: server
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   restart: on-failure
  #   networks:
  #     - backend
  #   links:
  #     - postgres
  #   depends_on:
  #     - postgres
  #     - redis
  #     - spreadsheet-api-service
  postgres:
    restart: always
    image: postgres:13-buster
    container_name: postgres
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=P@55word12345
      - POSTGRES_USER=dev
      - POSTGRES_DB=dev
    networks:
      - backend
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data
  spreadsheet-api-service:
    image: trsiddiqui1989/ej2-spreadsheet-web-services
    restart: always
    ports:
      - "3002:3002"
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: host.docker.internal
      KC_DB_URL_DATABASE: identity
      KC_DB_PASSWORD: P@55word12345
      KC_DB_USERNAME: dev
      KC_DB_SCHEMA: public
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    security_opt:
      - seccomp:unconfined
    volumes:
      - ./Keycloak/realm.json:/opt/keycloak/data/import/realm.json
    ports:
      - "8086:8080"
    networks:
      - backend
    depends_on:
      - postgres

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
  redis:
    driver: local
